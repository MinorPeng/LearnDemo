if (isDebug.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        // 作为library时不能有applicationId,只有作为一个独立应用时才能够如下设置
        if (isDebug.toBoolean()) {
            applicationId "com.example.a14512.module1"
        }
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        //所有资源必须以此 prefix 开头，否则会报错
        resourcePrefix "module1_"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    //java8
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            if (isDebug.toBoolean()) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/release/AndroidManifest.xml'
                java {
                    //release 时 debug 目录下文件不需要合并到主工程
                    exclude '**/debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //arouter
    annotationProcessor rootProject.ext.arouterCompiler

    //不能使用implementation，否者会依赖没效果，貌似所有公用库也只能使用api
    api project(path: ':resource')

    //dagger2
    annotationProcessor rootProject.ext.dagger2Compiler
}
